apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlinx-serialization'
apply plugin: 'org.jmailen.kotlinter'

android {
    compileSdkVersion AndroidConfig.compileSdk

    namespace "com.sf.tadami.extension"
    sourceSets {
        main {
            manifest.srcFile "AndroidManifest.xml"
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        release {
            manifest.srcFile "AndroidManifest.xml"
        }
        debug {
            manifest.srcFile "AndroidManifest.xml"
        }
    }

    defaultConfig {
        minSdkVersion build.versions.minSdk.get().toInteger()
        targetSdkVersion build.versions.targetSdk.get().toInteger()
        applicationIdSuffix project.parent.name + "." + project.name
        versionCode extVersionCode
        versionName project.ext.properties.getOrDefault("libVersion", build.versions.defaultLibVersion.get()) + ".$extVersionCode"
        base {
            archivesName = "tadami-$applicationIdSuffix-v$versionName"
        }
        manifestPlaceholders = [
                appName : "Tadami: $extName",
                extClass: extClass
        ]
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    dependenciesInfo {
        includeInApk = false
    }

    buildFeatures {
        // Disable unused AGP features
        aidl false
        renderScript false
        resValues false
        shaders false
        buildConfig true
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += "-opt-in=kotlinx.serialization.ExperimentalSerializationApi"
    }

    kotlinter {
        experimentalRules = true
        disabledRules = [
            "experimental:argument-list-wrapping", // Doesn't play well with Android Studio
            "experimental:comment-wrapping",
        ]
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(project(":core"))
    compileOnly(libs.bundles.common)
}

preBuild.dependsOn(lintKotlin)
lintKotlin.dependsOn(formatKotlin)
