android {
    compileSdkVersion build.versions.compileSdk.get().toInteger()
    namespace "com.sf.tadami.extension.$pkgNameSuffix"

    sourceSets {
        main {
            manifest.srcFile "AndroidManifest.xml"
            java.srcDirs = ['src']
            res.srcDirs = ['res']
        }
        release {
            manifest.srcFile "AndroidManifest.xml"
        }
        debug {
            manifest.srcFile "AndroidManifest.xml"
        }
    }

    defaultConfig {
        minSdkVersion build.versions.minSdk.get().toInteger()
        targetSdkVersion build.versions.targetSdk.get().toInteger()
        versionCode extVersionCode
        versionName project.ext.properties.getOrDefault("apiVersion", build.versions.latestApiVersion.get()) + ".$extVersionCode"
        archivesBaseName = "tadami-$pkgNameSuffix-v$versionName"
        manifestPlaceholders = [
                appName : "Tadami: $extName",
                extClass: extClass
        ]
    }

    signingConfigs {
        release {
            storeFile file(env.KEY_FILE.value)
            storePassword env.KEY_STORE_PASSWORD.value
            keyAlias env.ALIAS.value
            keyPassword env.KEY_STORE_PASSWORD.value
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
        }
    }

    dependenciesInfo {
        includeInApk = false
    }

    buildFeatures {
        // Disable unused AGP features
        aidl false
        renderScript false
        resValues false
        shaders false
        buildConfig true
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += "-opt-in=kotlinx.serialization.ExperimentalSerializationApi"
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "tadami-${pkgNameSuffix}-v${versionName}.apk"
        }
    }
}

dependencies {
    implementation(project(":core"))
    compileOnly(project(":api"))
    compileOnly(libs.datastore)
    compileOnly(libs.navigation.compose)
    compileOnly(libs.bundles.common)
}
